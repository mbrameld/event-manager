// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id              String           @id @default(cuid())
    name            String?
    email           String?          @unique
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]
    scheduledEvents ScheduledEvent[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Ambassador {
    id              String                        @id @default(cuid())
    email           String                        @unique
    name            String
    schedules       AmbassadorSchedule[]
    exceptions      AmbassadorScheduleException[]
    scheduledEvents ScheduledEvent[]
}

model AmbassadorSchedule {
    id           Int         @id @default(autoincrement())
    dayOfWeek    Int
    startHour    Int
    endHour      Int
    ambassador   Ambassador? @relation(fields: [ambassadorId], references: [id], onDelete: Cascade)
    ambassadorId String?

    @@unique([ambassadorId, dayOfWeek])
    @@index([ambassadorId])
}

model AmbassadorScheduleException {
    id           String      @id @default(cuid())
    start        DateTime
    end          DateTime
    ambassador   Ambassador? @relation(fields: [ambassadorId], references: [id], onDelete: Cascade)
    ambassadorId String?

    @@index([ambassadorId])
}

model EventType {
    id   Int    @id @default(autoincrement())
    name String @unique
}

model Duration {
    id       Int @id @default(autoincrement())
    duration Int @unique
}

model ScheduledEvent {
    id            String     @id @default(cuid())
    startTime     DateTime
    eventType     String
    durationHours Int
    ambassador    Ambassador @relation(fields: [ambassadorId], references: [id])
    ambassadorId  String
    owner         User?      @relation(fields: [ownerId], references: [id])
    ownerId       String?
}
